This is a collection of various tools that may be useful to use in conjunction
with ScummVM. Please note that this module is not always in-sync with the latest
STABLE version of ScummVM.

This means that although a tool may support a feature, certain
ScummVM versions may not. ScummVM 0.6.x does not support FLAC audio, for
example.

Extraction Tools:
        extract_agos
                Extracts the packed files used in the Amiga and AtariST
                versions of Elvira 1/2, Waxworks and Simon the Sorcerer 1.

        extract_kyra
                Unpacks .PAK files from Kyrandia games.

        extract_scumm_mac
                Extracts Macintosh "single file" SCUMM games into their
                component parts, for use with ScummVM.
                This is required for ScummVM up to version 0.6.x; all
                later versions directly support reading this file
                format.

        extract_loom_tg16
                Extracts data files from TG16 version of Loom.
                Use the dumpcd utility at http://www.zeograd.com/misc_download.php
                to dump the code tracks on the CD.
                There is currently no support for this game in ScummVM!

        extract_mm_c64
                Extracts data files from the Commodore 64 version of Maniac
                Mansion.

        extract_mm_nes
                Extracts data files from the NES version of Maniac Mansion.

        extract_zak_c64
                Extracts data files from the Commodore 64 version of Zak
                McKracken.

Compression Tools:
        compress_scumm_sou
                Used to compress .sou files to .so3 (MP3), .sog (Vorbis),
                or .sof (FLAC).

        compress_queen
                Used to rebuild the datafile of Flight of the Amazon Queen,
                and allow optional MP3, Vorbis or FLAC compression.

        compress_saga
                Used to compress SAGA engine digital sound files to MP3 or
                Vorbis.
                There is currently no support for compressed sound files in
                ScummVM!

        compress_simon
                Used to compress the Feeble Files or Simon 1/2 voc/wav files
                to MP3, Vorbis or FLAC.

        compress_sword1
                Used to compress Broken Sword 1's music and speech files to
                MP3 or Vorbis.

        compress_sword2
                Used to compress Broken Sword 2's music and speech .clu
                files to .cl3 (MP3), .clg (Vorbis) or .clf (FLAC).

                Please note that FLAC compression will produce a larger file
                than the original! This is because the original files already
                use lossy compression.

        compress_touche
                Used to compress Touche speech files to MP3, Vorbis or FLAC.

        compress_scumm_san <inputfile> <inputdir> <outputdir> [--ogg]
                Compresses '.san' smush animation files. It uses lossless
                zlib for compressing FOBJ gfx chunks inside a san file.
                It also can create a separate Ogg file with the audio track.

                Example of usage:
                compress_Scumm_san opening.san uncomp comp

                In order to use such compressed files, your ScummVM binary
                must have been built with zlib support enabled (you can find
                out whether that's the case by looking at the About dialog).
                For the Ogg or Mad compression feature, your ScummVM binary
                naturally must have been built with Ogg or Mad support enabled.

                NOTE: For some '.san' files there is a corresponding '.flu'
                file, which contains offsets into the '.san' file. Hence, the
                compress_scumm_san has to modify the '.flu' file. This happens
                automatically, if the '.san' and '.flu' files are in the
                same directory (which is normally the case). If you want to
                move the '.san' files before compressing them, make sure to
                move the '.flu' files, too!

        compress_scumm_bun <inputfile> <inputdir> <outputdir> [--ogg]

                Compresses '.bun' music/voice files.

                Example of usage:
                compress_scumm.bun digmusic.bun uncomp comp

                For the Ogg or Mad compression feature, your ScummVM binary
                naturally must have been built with Ogg or Mad support enabled.

        compress_kyra
                Used to compress The Legend of Kyrandia's speech files with
                MP3, Vorbis or FLAC.

                Example of usage:
                compress_kyra <flags here> input/GEMCUT.VRM output/GEMCUT.VRM

                Note: You have to keep the VRM extension, else it will NOT work.
                Use it like shown above, copy all *.VRM files to a directory
                and let the tool put the output file in another directory.

Script Tools:
        descumm
                Decompiles SCUMM scripts

        desword2
                Disassembles Broken Sword II scripts

        dekyra
                Basic script disassembler for Legend of Kyrandia games

Encoder Tools:
        encode_dxa <filename>

                Creates DXA file out of extracted Smacker video.

                To extract a video use RAD Game Tools and perform 2 passes
                on it. For example, if your video is called 'intro.smk'.

                1. Extract the video to PNG, 256 colors (choose PNG format
                and tick the checkbox). It will create bunch of files named
                'introXXX.png', where XXX is frame number. Make sure you have
                extracted 256 colors PNGs, otherwise encode_dxa will complain.

                2. Extract the audio to WAV format, you will get an
                'intro.wav' file.

                3. Put files 'intro.smk', 'intro.wav' and 'intro*.png' into a
                single directory.

                4. Run `encode_dxa intro.smk` in that directory

                5. You will get an intro.dxa file and intro.flac/mp3/ogg file
                in result.

                Additionally you may use batch processing mode of SMK files in
                RAD Game Tools. Just select more than one file and push the
                'Convert' button. It will ask you either you want them
                processed in batch mode and will do this for you. All buttons
                and conversion options work the same.
